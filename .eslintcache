[{"/home/diop/restcountries/countriesapi/src/App.js":"1","/home/diop/restcountries/countriesapi/src/components/Header.js":"2","/home/diop/restcountries/countriesapi/src/components/Filter.js":"3","/home/diop/restcountries/countriesapi/src/index.js":"4","/home/diop/restcountries/countriesapi/src/components/Countries.js":"5","/home/diop/restcountries/countriesapi/src/components/CountryItems.js":"6","/home/diop/restcountries/countriesapi/src/components/Search.js":"7","/home/diop/restcountries/countriesapi/src/components/Spinner.js":"8"},{"size":1628,"mtime":1609883609183,"results":"9","hashOfConfig":"10"},{"size":195,"mtime":1608063972655,"results":"11","hashOfConfig":"10"},{"size":579,"mtime":1609883347549,"results":"12","hashOfConfig":"10"},{"size":219,"mtime":1608149731944,"results":"13","hashOfConfig":"10"},{"size":355,"mtime":1609860305116,"results":"14","hashOfConfig":"10"},{"size":631,"mtime":1609852250003,"results":"15","hashOfConfig":"10"},{"size":333,"mtime":1609854623879,"results":"16","hashOfConfig":"10"},{"size":368,"mtime":1609852091053,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"zrkuy1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/diop/restcountries/countriesapi/src/App.js",["37"],"import React, { useState, useEffect } from \"react\";\nimport Search from \"./components/Search\";\nimport Filter from \"./components/Filter\";\n\nimport Countries from \"./components/Countries\";\nimport axios from \"axios\";\nimport Spinner from \"./components/Spinner\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filteredCountries, setFilteredCountries] = useState(countries);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((res) => {\n      setCountries(res.data);\n      setFilteredCountries(res.data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  onchange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const searchCountries = (event) => {\n    const newCountries = countries.filter((country) => {\n      return country.name\n        .toLowerCase()\n        .includes(event.target.value.toLowerCase());\n    });\n    setFilteredCountries(newCountries);\n  };\n\n  const filterbyRegion = (region) => {\n    if (region === \"All\") setFilteredCountries(countries);\n    else {\n      const newCountries = countries.filter((country) => {\n        return country.region.toLowerCase().includes(region.toLowerCase());\n      });\n      setFilteredCountries(newCountries);\n    }\n  };\n\n  return (\n    <div>\n      <Search onchange={searchCountries} />\n      <Filter filterbyRegion={filterbyRegion} />\n      <Countries\n        countryFiltered={filteredCountries}\n        setIsLoading={setIsLoading}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","/home/diop/restcountries/countriesapi/src/components/Header.js",[],"/home/diop/restcountries/countriesapi/src/components/Filter.js",[],"/home/diop/restcountries/countriesapi/src/index.js",[],["38","39"],"/home/diop/restcountries/countriesapi/src/components/Countries.js",[],["40","41"],"/home/diop/restcountries/countriesapi/src/components/CountryItems.js",[],"/home/diop/restcountries/countriesapi/src/components/Search.js",[],"/home/diop/restcountries/countriesapi/src/components/Spinner.js",[],{"ruleId":"42","severity":1,"message":"43","line":11,"column":10,"nodeType":"44","messageId":"45","endLine":11,"endColumn":16},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},"no-unused-vars","'search' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"no-global-assign","no-unsafe-negation"]